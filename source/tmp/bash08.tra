              -n将尚未从历史文件中读取的历史记录行读入cur-
                     租金历史清单。这些是自从以来附加到历史文件的行
                     当前bash会话的开头。
              -r读取历史文件的内容并将其用作当前历史记录。
              -w将当前历史记录写入历史文件，覆盖历史文件
                     内容。
              -p对以下args执行历史记录替换并显示结果
                     标准输出。不将结果存储在历史列表中。每
                     必须引用arg才能禁用正常的历史记录扩展。
              -s将args作为单个条目存储在历史列表中。最后一个命令
                     在添加args之前删除历史列表。

              如果设置了HISTTIMEFORMAT变量，则与时间戳信息关联
              每个历史记录条目都写入历史记录文件，标记有历史记录
              字符。读取历史记录文件时，以历史记录开头的行
              紧跟一个数字的字符被解释为前面的时间戳
              虔诚的历史路线。除非遇到无效选项，否则返回值为0
              读取或写入历史文件时发生错误，无效偏移是支持
              作为-d的参数，或作为-p的参数提供的历史扩展
              失败。

       工作[-lnprs] [jobspec ...]
       jobs -x命令[args ...]
              第一个表单列出了活动作业。选项具有以下含义：
              -l除正常信息外，还列出进程ID。
              -n仅显示自用户以来状态已更改的作业的信息
                     最后通知他们的状态。
              -p仅列出作业进程组组长的进程ID。
              -r将输出限制为正在运行的作业。
              -s将输出限制为已停止的作业。

              如果给出了jobspec，则输出仅限于有关该作业的信息。回报
              状态为0，除非遇到无效选项或无效的jobspec支持
              合股。

              如果提供了-x选项，则作业将替换command或args中找到的所有jobspec
              使用相应的进程组ID，并执行命令传递args，
              返回其退出状态。

       杀了[-s sigspec | -n signum | -sigspec] [pid | jobspec] ......
       kill -l [sigspec | EXIT_STATUS]
              将由sigspec或signum命名的信号发送到由pid或jobspec命名的进程。
              sigspec是一个不区分大小写的信号名称，如SIGKILL（有或没有
              SIG前缀）或信号编号; signum是一个信号编号。如果sigspec不是
              现在，假设SIGTERM。 -l的参数列出了信号名称。如果有的话
              给出-l时提供的参数，对应的信号名称
              列出参数，返回状态为0. exit_status参数为
              -l是指定进程的信号编号或退出状态的编号
              由信号终止。如果至少有一个信号成功，则kill返回true
              发送错误，如果发生错误或遇到无效选项，则为false。

       让arg [arg ...]
              每个arg都是一个要评估的算术表达式（参见算术评估
              以上）。如果最后一个arg的计算结果为0，则返回1;否则返回0。

       local [option] [name [= value] ...]
              对于每个参数，将创建名为name的局部变量，并为其指定值。该
              option可以是declare接受的任何选项。当本地使用时
              函数，它使变量名称的可见范围限制为该范围
              功能及其子女。如果没有操作数，本地会写入局部变量列表
              到标准输出。不在函数内时使用local是错误的。
              除非在函数外部使用local，否则返回状态为0，无效名称为
              提供，或名称是只读变量。

       logout退出登录shell。

       mapfile [-n count] [-O origin] [-s count] [-t] [-u fd] [-C callback] [-c quantum] [array]
       readarray [-n count] [-O origin] [-s count] [-t] [-u fd] [-C callback] [-c quantum] [array]
              从标准输入到索引数组变量数组或从中读取行
              文件描述符fd如果提供了-u选项。变量MAPFILE是
              默认数组。选项（如果提供）具有以下含义：
              -n复制最多计数行。如果count为0，则复制所有行。
              -O开始在索引源处分配数组。默认索引为0。
              -s丢弃读取的第一个计数行。
              -t从每行读取中删除尾部换行符。
              -u从文件描述符fd而不是标准输入读取行。
              -C每次读取量子线时评估回调。 -c选项指定
                     量子。
              -c指定每次调用回调之间读取的行数。

              如果在没有-c的情况下指定-C，则默认量程为5000.当回调是评估时 - 
              ated，它提供了要分配的下一个数组元素的索引和行
              要作为附加参数分配给该元素。之后评估回调
              在读取数组元素之前读取该行。

              如果未提供显式原点，则mapfile将在分配之前清除数组
              它。

              mapfile成功返回，除非有无效的选项或选项参数支持
              plied，数组无效或不可分配，或者数组不是索引数组。

       popd [-n] [+ n] [-n]
              从目录堆栈中删除条目。没有参数，删除顶部的方向 - 
              来自堆栈的tory，并执行cd到新的顶级目录。争论，如果支持
              合作，具有以下含义：
              -n从中删除目录时禁止正常更改目录
                     堆栈，以便只处理堆栈。
              + n删除dirs所示列表左侧的第n个条目，
                     从零开始。例如：``popd +0''删除第一个目录，
                     ``popd +1''第二个。
              -n删除dirs所示列表右侧的第n个条目，
                     从零开始。例如：``popd -0''删除最后一个目录，
                     ``popd -1''倒数第二个。

              如果popd命令成功，也会执行dirs，并且返回sta
              tus为0.如果遇到无效选项，popd将返回false，即目录
              stack为空，指定了不存在的目录堆栈条目或目录
              改变失败。

       printf [-v var] format [arguments]
              在for-的控制下将格式化的参数写入标准输出
              垫。 -v选项导致将输出分配给变量var而不是
              被打印到标准输出。

              格式是一个包含三种类型对象的字符串：plain char-
              acters，简单地复制到标准输出，字符转义序列，
              转换并复制到标准输出和格式规范，
              每一个都会导致打印下一个连续的参数。除了
              标准printf（1）格式规范，printf解释以下exten-
              sions：
              ％b导致printf在相应的论证中扩展反斜杠转义序列
                     （除了\ c终止输出，\'，\“和\？中的反斜杠都不是
                     删除，以\ 0开头的八进制转义可能包含最多四位数字）。
              ％q使printf以可以的格式输出相应的参数
                     重用为shell输入。
              ％（datefmt）笔
                     导致printf输出使用datefmt作为结果的日期时间字符串
                     strftime（3）的格式字符串。相应的参数是整数
                     表示自纪元以来的秒数。两个特殊的论点
                     可以使用以下值：-1表示当前时间，-2表示当前时间
                     调用shell的时间。

              非字符串格式说明符的参数被视为C常量，但a除外
              允许使用前导加号或减号，如果前导字符是单个或
              双引号，该值是以下字符的ASCII值。

              必要时重用该格式以使用所有参数。如果是格式
              需要的参数多于提供的参数，额外的格式规范表现为
              如果提供了零值或空字符串（如果适用）。返回值
              成功时为零，失败时为非零。

       pushd [-n] [+ n] [-n]
       pushd [-n] [dir]
              将目录添加到目录堆栈的顶部，或者旋转堆栈，制作
              新的堆栈顶部当前工作目录。没有争论，交流
              除非目录堆栈为空，否则前两个目录并返回0。论元
              如果提供，则具有以下含义：
              -n在向目录添加目录时禁止正常更改目录
                     堆栈，以便只处理堆栈。
              + n旋转堆栈以便第n个目录（从左侧开始计数）
                     dirs显示的列表，从零开始）位于顶部。
              -n旋转堆栈以便第n个目录（从右侧开始计数）
                     dirs显示的列表，从零开始）位于顶部。
              dir将dir添加到顶部的目录堆栈，使其成为新的当前工作
                     目录。

              如果pushd命令成功，则也执行dirs。如果是第一个表格
              使用，pushd返回0，除非cd到dir失败。用第二种形式，推
              返回0，除非目录堆栈为空，一个不存在的目录堆栈ele-
              指定了ment，或者目录更改为指定的新当前目录
              失败。

       pwd [-LP]
              打印当前工作目录的绝对路径名。打印的路径名
              如果提供了-P选项或者-o physical选项，则不包含符号链接
              set builtin命令已启用。如果使用-L选项，则打印路径名
              可能包含符号链接。返回状态为0，除非发生错误
              读取当前目录的名称或提供无效选项。

       读[-ers] [-a aname] [-d delim] [-i text] [-n nchars] [-N nchars] [-p prompt] [-t time-
       out] [-u fd] [name ...]
              从标准输入读取一行，或从提供的文件描述符fd读取
              -u选项的参数，第一个单词分配给第一个名称，即
              第二个字到第二个名字，依此类推，剩下的字和他们的介入
              分配给姓氏的分隔符。如果从输入中读取的单词较少
              流比名称，其余名称分配空值。中的人物
              IFS用于将行拆分为单词。可以使用反斜杠字符（\）
              删除下一个字符读取和行继续的任何特殊含义。
              选项（如果提供）具有以下含义：
               - 一个人
                     这些单词被分配给数组变量aname的顺序索引，
                     从0开始。在分配任何新值之前，未设置aname。其他
                     名称参数被忽略。
              -d delim
                     delim的第一个字符用于终止输入行，而不是
                     新队。
              -e如果标准输入来自终端，则为readline（参见READLINE
                     以上）用于获得该线。 Readline使用当前（或默认，如果
                     行编辑以前没有激活）编辑设置。
              -i文字
                     如果使用readline读取行，则将文本放入编辑中
                     编辑开始前的缓冲区。
              -n nchars
                     读取nchars字符后读取返回而不是等待com-
                     完整的输入行，但如果少于nchars字符，则表示分隔符
                     在分隔符之前读取。
              -N nchars
                     读取完全nchars字符后读取返回而不是等待
                     完整的输入线，除非遇到EOF或读取超时。
                     输入中遇到的分隔符不会被特殊处理
                     在读取nchars字符之前不要导致读取。
              -p提示
                     在尝试之前显示标准错误的提示，没有尾随换行符
                     阅读任何输入。仅在输入来自时才显示提示
                     一个终端。
              -r反斜杠不作为转义字符。考虑反斜杠
                     成为该行的一部分。特别是，反斜杠 - 换行符可能不是
                     用作续行。
              -s静音模式。如果输入来自终端，则不回显字符。
              -t超时
                     如果没有完整的输入行，则会导致读取超时并返回失败
                     在超时秒内读取。超时可能是一个带小数的十进制数
                     小数点后面的部分。此选项仅在以下情况下有效
                     read是从终端，管道或其他特殊文件读取输入;它没有
                     从常规文件中读取时的效果。如果timeout为0，则read返回成功
                     cess如果输入在指定的文件描述符上可用，则失败 - 
                     明智的。如果超出超时，则退出状态大于128。
              -u fd从文件描述符fd读取输入。

              如果未提供名称，则将读取的行分配给变量REPLY。该
              返回代码为零，除非遇到文件结尾，读取超时（其中
              返回代码大于128的情况，或者提供了无效的文件描述符
              作为-u的参数。

       readonly [-aAf] [-p] [name [= word] ...]
              给定的名称标记为只读;这些名称的值不能改变
              后续任务。如果提供了-f选项，则对应的函数
              名字是如此标记。 -a选项将变量限制为索引数组;
              -A选项将变量限制为关联数组。如果两个选项都是
              提供，-A优先。如果没有给出名称参数，或者是-p选项
              如果提供，则打印所有只读名称的列表。可以使用其他选项
              将输出限制为只读名称集的子集。 -p选项
              导致输出以可重复用作输入的格式显示。如果变量
              能够名称后跟= word，变量的值设置为word。该
              除非遇到无效选项，否则返回状态为0，其中一个名称不是
              一个有效的shell变量名，或者-f提供的名称不是函数。

       返回[n]
              使函数以n指定的返回值退出。如果省略n，
              返回状态是函数体中执行的最后一个命令的状态。如果
              在函数外部使用，但在执行脚本期间。 （来源）com-
              mand，它会导致shell停止执行该脚本并返回n或者
              在脚本中执行的最后一个命令的退出状态作为退出状态
              脚本。如果在函数外部使用而不是在执行脚本期间使用，则
              返回状态为false。执行与RETURN陷阱关联的任何命令
              在执行函数或脚本之后恢复之前。

       设置[--abefhkmnptuvxBCEHPT] [-o选项名称] [arg ...]
       设置[+ abefhkmnptuvxBCEHPT] [+ o选项名称] [arg ...]
              如果没有选项，每个shell变量的名称和值都以格式显示
              可以重复用作设置或重置当前设置变量的输入。
              只读变量无法重置。在posix模式下，只有shell变量
              上市。输出根据当前区域设置进行排序。当选项时
              指定时，它们设置或取消设置shell属性。选项后剩余的任何参数
              处理被视为位置参数的值并被分配
              订单，$ 1，$ 2，... $ n。选项（如果指定）具有以下含义：
              -a自动标记为其修改或创建的变量和函数
                      导出到后续命令的环境。
              -b立即报告已终止后台作业的状态，而不是
                      在下一个主要提示之前。这仅在作业控制时有效
                      启用。
              -e如果管道（可能由一个简单的组件组成）立即退出
                      mand），括在括号中的子shell命令，或其中一个命令
                      作为括号括起来的命令列表的一部分执行（参见SHELL GRAMMAR
                      以上）以非零状态退出。如果命令，shell不会退出
                      失败是命令列表的一部分，紧接着一段时间或
                      直到关键字，if或elif保留字后面的测试的一部分，
                      在&&或||中执行的任何命令的一部分除以下命令之外的列表
                      最后的&&或||，管道中的任何命令，但最后一个，或者如果是
                      mand的返回值正在被反转！ ERR上的陷阱（如果设置）是
                      在shell退出之前执行。此选项适用于shell环境
                      分别与每个子壳环境相关（参见COMMAND EXECUTION ENVI-
                      上面的RONMENT，并且可能导致子shell在执行所有之前退出
                      子shell中的命令。
              -f禁用路径名扩展。
              -h在查找执行命令时记住命令的位置。这个
                      默认情况下启用。
              -k赋值语句形式的所有参数都放在环境中
                      命令的ronment，而不仅仅是命令名称之前的命令。
              -m监控模式。作业控制已启用。默认情况下，此选项处于启用状态
                      支持它的系统上的交互式shell（参见上面的JOB CONTROL）。
                      后台进程在单独的进程组和包含的行中运行
                      他们的退出状态在完成后打印。
              -n读取命令但不执行它们。这可用于检查shell
                      语法错误的脚本。交互式shell会忽略它。
              -o选项名称
                      选项名称可以是以下之一：
                      allexport
                              与-a相同。
                      braceexpand
                              与-B相同。
                      emacs使用emacs样式的命令行编辑界面。这已启用
                              默认情况下，当shell是交互式时，除非shell是
                              以--noediting选项开始。这也会影响编辑
                              用于读取-e的接口。
                      errexit与-e相同。
                      errtrace
                              与-E相同。
                      functrace
                              与-T相同。
                      hashall与-h相同。
                      histexpand
                              与-H相同。
                      history启用命令历史记录，如上面HISTORY中所述。这个
                              默认情况下，交互式shell中的选项处于启用
                      了ignoreeof
                              效果就好像shell命令``IGNOREEOF = 10''已被执行
                              cuted（参见上面的Shell变量）。
                      keyword与-k相同。
                      monitor与-m相同。
                      noclobber选项
                              与-C相同。
                      noexec与-n相同。
                      noglob与-f相同。
                      nolog目前被忽略了。
                      通知与-b相同。
                      nounset与-u相同。
                      onecmd与-t相同。
                      物理
                              与-P相同。
                      pipefail
                              如果设置，管道的返回值是最后一个的值
                              （最右边）命令以非零状态退出，如果全部退出则为零
                              管道中的命令成功退出。此选项已禁用
                              默认情况下。
                      posix更改默认操作不同的bash的行为
                              POSIX标准与标准（posix模式）相匹配。
                      特权
                              与-p相同。
                      verbose与-v相同。
                      vi使用vi样式的命令行编辑界面。这也会影响
                              用于读取-e的编辑界面。
                      xtrace与-x相同。
                      如果-o没有选项名称，则当前选项的值为
                      打印。如果+ o没有option-name，则提供一系列set命令
                      重新创建当前选项设置显示在标准输出上。
              -p启用特权模式。在此模式下，$ ENV和$ BASH_ENV文件不是
                      处理后，shell函数不是从环境中继承而来的
                      SHELLOPTS，BASHOPTS，CDPATH和GLOBIGNORE变量，如果它们出现在
                      环境，被忽略了。如果shell是由有效用户启动的
                      （group）id不等于真实用户（组）id，而-p选项不等于
                      提供，执行这些操作，并将有效用户ID设置为
                      真实的用户ID。如果启动时提供-p选项，则为有效用户
                      id未重置。关闭此选项会导致有效的用户和
                      要将组ID设置为真实用户和组ID。
              -t读取并执行一个命令后退出。
              -u处理除特殊参数“@”以外的未设置变量和参数
                      和“*”作为执行参数扩展时的错误。如果扩张是
                      尝试对未设置的变量或参数，shell打印错误信息
                      sage，如果不是交互式，则以非零状态退出。
              -v在读取时打印shell输入行。
              -x扩展每个简单命令后，对于command，case命令，选择com-
                      mand，或arithmetic for command，显示PS4的扩展值，紧接着
                      通过命令及其扩展的参数或相关的单词列表。
              -B shell执行大括号扩展（参见上面的Brace Expansion）。这是开启
                      默认情况下。
              -C如果设置，bash不会使用>，>＆和<>重新覆盖现有文件
                      方向运营商。在创建输出文件时，可以覆盖此项
                      使用重定向运算符> |而不是>。
              -E如果设置，ERR上的任何陷阱都由shell函数继承，命令替换 - 
                      子shell和子shell环境中执行的命令。 ERR陷阱是
                      通常不会在这种情况下继承。
              -H启用！风格历史替代。默认情况下，此选项处于启用状态
                      shell是交互式的。
              -P如果设置，则在执行命令时shell不遵循符号链接
                      例如改变当前工作目录的cd。它使用物理
                      目录结构而不是。默认情况下，bash遵循逻辑链
                      执行更改当前目录的命令时的目录。
              -T如果设置，则DEBUG和RETURN上的任何陷阱都由shell函数继承，
                      mand替换，以及在子shell环境中执行的命令。该
                      在这种情况下，DEBUG和RETURN陷阱通常不会被继承。
               - 如果此选项后面没有参数，则位置参数为
                      未设置。否则，即使位置参数也设置为args
                      其中一些以 - 开头。
               - 发出选项结束信号，将所有剩余的args分配给
                      位置参数。 -x和-v选项已关闭。如果有
                      没有args，位置参数保持不变。

              除非另有说明，否则默认情况下关闭选项。使用+而不是 - 原因
              这些选项要关闭。选项也可以指定为参数
              一个shell的调用。当前的选项集可以在$  - 中找到。该
              除非遇到无效选项，否则返回状态始终为true。

       转移[n]
              来自n + 1 ...的位置参数被重命名为$ 1 ....参数代表
              数字$＃下调至$＃ -  n + 1未被设置。 n必须是非负数
              小于或等于$＃。如果n为0，则不更改任何参数。如果没有给出n，
              它假设为1.如果n大于$＃，则位置参数不是
              改变。如果n大于$＃或更小，则返回状态大于零
              比零;否则为0。

       shopt [-pqsu] [-o] [optname ...]
              切换控制可选shell行为的变量值。没有
              选项，或使用-p选项，显示所有可设置选项的列表，并带有
              指示是否已设置。 -p选项导致输出为dis-
              以可以重复用作输入的形式播放。其他选项有以下几种
              含义：
              -s启用（设置）每个optname。
              -u禁用（取消设置）每个optname。
              -q禁止正常输出（安静模式）;返回状态表示是否
                     optname已设置或未设置。如果给出了多个optname参数
                     -q，如果启用了所有optnames，则返回状态为零;非零其他 - 
                     明智的。
              -o将optname的值限制为为-o选项定义的值
                     设置内置。

              如果使用-s或-u且没有optname参数，则显示仅限于
              分别设置或取消设置的选项。除非另有说明，否则
              默认情况下，shopt选项被禁用（未设置）。

              如果启用了所有optnames，则列出选项时的返回状态为零，非零
              除此以外。设置或取消设置选项时，返回状态为零，除非
              optname不是有效的shell选项。

              shopt选项列表是：

              autocd如果设置，则作为目录名称的命令名称将作为i执行
