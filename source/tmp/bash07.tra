r保证的路径
              找到所有标准实用程序。如果提供-V或-v选项，则a
              打印命令的描述。 -v选项会导致单个单词指示
              用于调用要显示的命令的命令或文件名; -V选项pro-
              更详细的描述。如果提供-V或-v选项，则退出sta
              如果找到命令，则tus为0，否则为1。如果没有提供任何选项和
              发生错误或命令无法找到，退出状态为127.否则，
              命令buildin的退出状态是命令的退出状态。

       compgen [选项] [字]
              根据选项生成可能的单词完成匹配，可能是
              完整内置函数接受的任何选项，但-p和-r除外
              将匹配写入标准输出。使用-F或-C选项时，var-
              由可编程完成工具设置的ious shell变量，虽然可用，
              没有有用的价值。

              匹配将以与可编程完成代码相同的方式生成
              直接从具有相同标志的完成规范生成它们。如果
              指定了单词，只显示匹配单词的那些完成。

              除非提供了无效选项，否则返回值为true，或者没有匹配项
              产生。

       完成[-abcdefgjksuv] [-o comp-option] [-DE] [-A action] [-G globpat] [-W wordlist] [-F
       功能] [-C命令]
              [-X filterpat] [-P prefix] [-S suffix] name [name ...]
       完成-pr [-DE] [name ...]
              指定应如何完成每个名称的参数。如果-p选项是支持
              如果没有提供选项，则打印现有的完成规范
              以允许它们作为输入重用的方式。 -r选项删除完成
              每个名称的规范，或者，如果没有提供名称，则所有完成规范 - 
              蒸发散。 -D选项表示应该应用其余选项和操作
              到``default''命令完成;也就是说，在命令上尝试完成
              以前没有完成任何完成。 -E选项表示
              剩下的选项和动作应该适用于``empty''命令完成;那
              是，在空白行上尝试完成。

              单词完成时应用这些完成规范的过程
              以上在可编程完成下描述了尝试。

              其他选项（如果指定）具有以下含义。 -G的论据，
              -W和-X选项（以及必要时，-P和-S选项）应引用
              在调用完整的内置函数之前保护它们不被扩展。
              -o comp-option
                      comp-option控制compspec行为的几个方面
                      简单生成完成。 comp-option可能是以下之一：
                      bashdefault
                              如果compspec执行其余的默认bash完成
                              不生成匹配项。
                      default如果生成compspec，则使用readline的默认文件名完成
                              无匹配。
                      dirnames中
                              如果compspec生成no，则执行目录名称完成
                              火柴。
                      文件名
                              告诉readline compspec生成文件名，因此它可以
                              形成任何特定于文件名的处理（比如向direc-添加斜杠）
                              保守党名称，引用特殊字符或抑制尾随水疗 - 
                              CES）。旨在与shell函数一起使用。
                      nospace告诉readline不要在已完成的单词后附加一个空格（默认值）
                              在行尾。
                      plusdirs
                              在生成由compspec定义的任何匹配之后，目录
                              尝试完成名称，并将任何匹配添加到
                              其他行动的结果。
               - 行动
                      该操作可以是以下之一，以生成可能的com-列表
                      pletions：
                      别名别名。也可以指定为-a。
                      arrayvar
                              数组变量名。
                      绑定Readline键绑定名称。
                      builtin shell内置命令的名称。也可以指定为-b。
                      命令命令。也可以指定为-c。
                      目录
                              目录名称。也可以指定为-d。
                      残
                              已禁用的shell内置命令的名称。
                      enabled已启用的shell内置命令的名称。
                      export导出的shell变量的名称。也可以指定为-e。
                      file文件名。也可以指定为-f。
                      功能
                              shell函数的名称。
                      组名称组。也可以指定为-g。
                      HELPTOPIC
                              帮助内置的帮助主题。
                      主机名
                              主机名，取自HOSTFILE shell指定的文件
                              变量。
                      作业名称，如果作业控制处于活动状态。也可以指定为-j。
                      关键字Shell保留字。也可以指定为-k。
                      如果作业控制处于活动状态，则运行正在运行的作业的名称
                      服务服务名称。也可以指定为-s。
                      setopt set builtin的-o选项的有效参数。
                      shopt内置的shopt接受的商店Shell选项名称。
                      信号信号名称。
                      如果作业控制处于活动状态，则停止已停止作业的名称。
                      用户用户名。也可以指定为-u。
                      变量
                              所有shell变量的名称。也可以指定为-v。
              -C命令
                      命令在子shell环境中执行，其输出用作
                      可能的完成。
              -F功能
                      shell函数函数在当前shell环境中执行。
                      完成后，可以从值中检索可能的完成
                      COMPREPLY数组变量。
              -G globpat
                      路径名扩展模式globpat被扩展为生成可能的
                      落成。
              -P前缀
                      在每个可能的完成之后，在所有其他之后添加前缀
                      选项已被应用。
              -S后缀
                      所有其他选项都有后缀附加到每个可能的完成
                      已被应用。
              -W wordlist
                      使用IFS特殊变量中的字符拆分wordlist
                      分隔符，每个结果单词都被扩展。可能的完成
                      结果列表的成员与正在填写的单词匹配。
              -X filterpat
                      filterpat是用于路径名扩展的模式。它适用于
                      由前述选项产生的可能完成的清单和论证 - 
                      将从列表中删除每个完成匹配filterpat。一个
                      领导 ！在filterpat中否定了模式;在这种情况下，任何完成不
                      匹配filterpat被删除。

              除非提供了无效选项，否则返回值为true，除了。之外的选项
              -p或-r是在没有name参数的情况下提供的，尝试删除一个完整的
              不存在规范或发生错误的名称的规范
              添加完成规范。

       compopt [-o选项] [-DE] [+ o选项] [名称]
              根据选项修改每个名称的完成选项，或者修改
              如果没有提供名称，则执行完成。如果没有给出任何选择，
              播放每个名称或当前完成的完成选项。可能
              option的值是对上述完整内置函数有效的值。 -D
              option表示其余选项应该应用于``default''命令
              完成;也就是说，尝试完成没有完成的命令
              以前已定义。 -E选项表示其余选项应该
              适用于``empty''命令完成;也就是说，在空白处尝试完成
              线。

              除非提供了无效选项，否则返回值为true
              修改没有完成规范的名称的选项，或者
              发生输出错误。

       继续[n]
              恢复封闭for，while，until或select循环的下一次迭代。如果是
              指定，在第n个封闭循环处继续。 n必须≥1。如果n更大
              比封闭循环的数量，最后一个封闭循环（“顶级”循环）
              恢复了。当在循环内执行continue时，返回值不为零
              当n≤0时;否则，继续返回0值。当继续执行时 - 
              循环一侧，返回值为0。

       声明[-aAfFgilrtux] [-p] [name [= value] ...]
       typeset [-aAfFgilrtux] [-p] [name [= value] ...]
              声明变量和/或赋予它们属性。如果没有给出名字，则显示
              变量的值。 -p选项将显示的属性和值
              每个名字。当-p与名称参数一起使用时，将忽略其他选项。
              当提供-p而没有名称参数时，它将显示属性和val-
              具有由附加选项指定的属性的所有变量的ues。如果
              没有其他选项与-p一起提供，声明将显示属性和val-
              所有shell变量的ues。 -f选项将显示限制为shell函数
              蒸发散。 -F选项禁止显示函数定义;只有功能 - 
              打印名称和属性。如果使用，则启用extdebug shell选项
              shopt，定义函数的源文件名和行号是dis-
              也起了作用。 -F选项意味着-f。 -g选项强制变量
              在全局范围内创建或修改，即使在shell中执行声明也是如此
              功能。在所有其他情况下都会被忽略。可以使用以下选项
              将输出限制为具有指定属性的变量或提供变量
              属性：
              -a每个名称都是一个索引数组变量（参见上面的数组）。
              -A每个名称都是一个关联数组变量（参见上面的数组）。
              -f仅使用函数名称。
              -i将变量视为整数;算术评估（参见ARITHMETIC
                     当变量被赋值时，执行上面的评估。
              -l为变量赋值时，所有大写字符都为con
                     转为小写。大写属性已禁用。
              -r只读名称。然后，这些名称不能通过subse-分配值
                     奇怪的赋值语句或未设置。
              -t为每个名称指定trace属性。跟踪函数继承DEBUG和
                     从调用shell返回陷阱。 trace属性没有特殊之处
                     对变量的意义。
              -u为变量赋值时，所有小写字符都为con
                     转为大写。小写属性已禁用。
              -x标记要通过环境导出到后续命令的名称。

              使用“+”而不是“ - ”会关闭属性，但有例外
              + a不能用于销毁数组变量，+ r不会删除readonly
              属性。在函数中使用时，将每个名称设置为本地名称，与本地com-
              mand，除非提供-g选项，如果变量名后跟= value，
              变量的值设置为value。除非无效，否则返回值为0
              遇到选项，尝试使用``-f foo = bar''定义一个函数，
              尝试将值分配给只读变量，尝试进行尝试
              在不使用复合赋值语法的情况下为数组变量赋值
              （参见上面的数组），其中一个名称不是有效的shell变量名，一个尝试
              用于关闭只读变量的只读状态，尝试进行
              关闭数组变量的数组状态，或尝试显示非数组
              与-f存在的功能。

       dirs [+ n] [-n] [-clpv]
              如果没有选项，则显示当前记住的目录列表。默认
              display在一行上，目录名用空格分隔。目录
              使用pushd命令添加到列表中; popd命令从中删除条目
              列表。
              + n显示dirs显示的列表左侧的第n个条目
                     没有选项调用，从零开始。
              -n显示dirs显示的列表右侧的第n个条目
                     没有选项调用，从零开始。
              -c通过删除所有条目来清除目录堆栈。
              -l生成更长的列表;默认列表格式使用代字号表示
                     主目录。
              -p打印目录堆栈，每行一个条目。
              -v打印目录堆栈，每行一个条目，为每个条目添加前缀
                     它在堆栈中的索引。

              返回值为0，除非提供了无效选项或n个索引超出
              目录堆栈的结尾。

       disown [-ar] [-h] [jobspec ...]
              如果没有选项，则会从活动作业表中删除每个jobspec。如果jobspec
              不存在-a和-r都没有提供，shell的当前概念
              工作被使用。如果给出-h选项，则不会从表中删除每个jobspec，
              但标记为如果shell收到SIGHUP，则不会将SIGHUP发送到作业。
              如果不存在jobspec，并且既没有提供-a选项也没有-r选项，那么
              租用工作被使用。如果未提供jobspec，则-a选项表示删除或标记
              所有工作;没有jobspec参数的-r选项将操作限制为运行
              工作。除非jobspec未指定有效作业，否则返回值为0。

       echo [-neE] [arg ...]
              输出args，用空格分隔，后跟换行符。返回状态是
              始终为0.如果指定了-n，则抑制尾随换行符。如果是-e选项
              给出了以下反斜杠转义字符的解释。
              -E选项禁用这些转义字符的解释，即使在sys-
              tems默认解释它们。可以使用xpg_echo shell选项
              动态确定echo是否扩展这些转义字符
              默认。 echo不解释 - 意味着选项的结束。回声解释
              以下转义序列：
              警报（铃）
              \ b退格
              \ c抑制进一步的输出
              。\ E
              \ E逃脱角色
              \ f表格饲料
              \ n新行
              \ r \ n回车
              \ t水平标签
              \ v垂直标签
              \\反斜杠
              \ nnnnn八位字符，其值为八进制值nnn（零到三
                     八进制数字）
              \ xHH八位字符，其值为十六进制值HH（一个或两个
                     十六进制数字
              \ uHHHH Unicode（ISO / IEC 10646）字符，其值为十六进制值
                     HHHH（一到四个十六进制数字）
              \ UHHHHHHHH
                     Unicode（ISO / IEC 10646）字符，其值为十六进制值
                     HHHHHHHH（一到八位十六进制数字）

       启用[-a] [-dnps] [-f filename] [name ...]
              启用和禁用内置shell命令。禁用内置允许磁盘com-
              在没有指定的情况下，与内置的shell同名的mand
              完整路径名，即使shell通常在磁盘com-之前搜索内置
              mands。如果使用-n，则禁用每个名称;否则，名称已启用。对于
              例如，使用通过PATH找到的测试二进制代替shell内置版本
              sion，运行``enable -n test''。 -f选项表示加载新的builtin命令
              在支持动态加载的系统上，来自共享对象文件名的名称。 -d
              选项将删除先前使用-f加载的内置函数。如果没有名称参数
              给定，或者如果提供了-p选项，则打印一个shell内置列表。同
              没有其他选项参数，该列表包含所有已启用的shell内置函数。如果-n
              提供，只打印禁用的内置。如果提供-a，则列表
              打印包括所有内置，并指示是否已启用每个内置。
              如果提供了-s，则输出仅限于POSIX特殊内置。该
              除非名称不是内置shell或加载错误，否则返回值为0
              来自共享对象的新内置。

       评估[arg ...]
              args被读取并连接成一个命令。这个命令是
              然后由shell读取并执行，并将其退出状态作为值返回
              EVAL。如果没有args或只有null参数，则eval返回0。

       exec [-cl] [-a name] [command [arguments]]
              如果指定了command，则替换shell。没有创建新进程。该
              参数成为命令的参数。如果提供了-l选项，则为shell
              在传递给命令的第0个参数的开头放置一个破折号。这是
              登录（1）的作用。 -c选项导致命令以空的环境执行
              ronment。如果提供了-a，则shell将name作为第0个参数传递给
              执行命令。如果由于某种原因无法执行命令，则为非交互式
              shell退出，除非启用了shell选项execfail，在这种情况下它将返回
              失败。如果无法执行文件，则交互式shell将返回失败。如果
              命令未指定，任何重定向在当前shell中生效，并且
              返回状态为0.如果存在重定向错误，则返回状态为1。

       退出[n]
              导致shell退出状态为n。如果省略n，则退出状态为
              最后一个命令的执行。 EXIT上的陷阱在shell之前执行
              minates。

       export [-fn] [name [= word]] ...
       export -p
              提供的名称标记为自动导出到子环境 - 
              执行命令。如果给出-f选项，则名称引用函数。
              如果没有给出名称，或者提供了-p选项，则列出所有名称
              导出在这个shell中打印出来。 -n选项导致export属性
              从每个名字中删除。如果变量名后跟= word，则为
              变量设置为word。 export返回退出状态为0，除非无效
              遇到选项，其中一个名称不是有效的shell变量名，或者-f是
              提供的名称不是函数。

       fc [-e ename] [-lnr] [first] [last]
       fc -s [pat = rep] [cmd]
              修复命令。在第一种形式中，选择从第一个到最后一个的一系列命令
              从历史列表中。可以将first和last指定为字符串（以查找
              以该字符串开头的最后一个命令）或作为数字（历史记录的索引）
              list，其中负数用作当前命令编号的偏移量）。
              如果未指定last，则将其设置为当前用于列出的命令（以便``fc
              -l -10''打印最后10个命令），否则先打印。如果首先不是规格
              ified将其设置为上一个编辑命令，将-16设置为列表。

              -n选项在列出时禁止命令编号。 -r选项反转
              命令的顺序。如果给出-l选项，则列出命令
              标准输出。否则，ename给出的编辑器在一个包含的文件中被调用 - 
              这些命令。如果未给出ename，则FCEDIT变量的值为
              如果未设置FCEDIT，则使用EDITOR的值。如果两个变量都没有设置，vi
              用来。编辑完成后，将回显并执行编辑的命令。

              在第二种形式中，在每个pat实例被替换后重新执行命令
              代表。与此一起使用的一个有用的别名是``r =“fc -s”''，因此键入``r cc''运行
              以“cc”开头并输入“r”的最后一个命令重新执行最后一个命令
              普通话。

              如果使用第一个表单，则返回值为0，除非遇到无效选项
              tered或first或last指定历史记录行超出范围。如果-e选项是支持
              plied，返回值是最后执行的命令的值，如果是，则失败
              临时文件命令发生错误。如果使用第二种形式，则
              返回状态是重新执行的命令的状态，除非cmd未指定
              有效的历史记录行，在这种情况下fc返回失败。

       fg [jobspec]
              在前台恢复jobspec，并使其成为当前作业。如果jobspec不是
              目前，使用shell的当前作业的概念。返回值是
              将命令置于前台，或者如果在作业控制为dis-时运行则失败
              在启用作业控制的情况下运行，或者，如果jobspec未指定有效作业
              或jobspec指定在没有作业控制的情况下启动的作业。

       getopts optstring name [args]
              shell过程使用getopts来解析位置参数。 optstring con
              确认要识别的选项字符;如果一个字符后跟一个冒号，
              该选项应该有一个参数，该参数应该与之分开
              白色空间。冒号和问号字符不能用作选项字符 - 
              acters。每次调用它时，getopts都会将下一个选项放在shell变量中
              能够名称，如果它不存在则初始化名称，以及下一个论证的索引 - 
              将被处理成变量OPTIND。 OPTIND每次初始化为1
              调用shell或shell脚本。当一个选项需要参数时，
              getopts将该参数放入变量OPTARG中。 shell不会重置
              OPTIND自动;它必须在多次调用getopts之间手动重置
              如果要使用一组新参数，则在同一shell调用内。

              遇到选项结束时，getopts将以更大的返回值退出
              比零。 OPTIND设置为第一个非选项参数的索引，名称为
              调成 ？。

              getopts通常会解析位置参数，但是如果给出的参数更多
              在args中，getopts会解析这些。

              getopts可以通过两种方式报告错误。如果optstring的第一个字符是a
              冒号，使用静默错误报告。在正常操作中，诊断消息是
              遇到无效选项或缺少选项参数时打印。如果
              变量OPTERR设置为0，即使是第一个，也不会显示错误消息
              optstring的字符不是冒号。

              如果看到无效选项，请使用getopts吗？进入名称，如果不是沉默，则打印
              错误消息并取消设置OPTARG。如果getopts是静默的，那么选项字符
              找到放在OPTARG中，不打印任何诊断消息。

              如果找不到必需的参数，并且getopts不是静默的，则会出现问号（？）
              将其置于名称中，取消设置OPTARG，并打印诊断消息。如果getopts
              是沉默的，然后冒号（:)放在名称中，OPTARG设置为选项char-
              发现了。

              如果找到指定或未指定的选项，则getopts返回true。它回来了
              如果遇到选项结尾或发生错误，则返回false。

       hash [-lr] [-p filename] [-dt] [name]
              每次调用哈希时，命令名称的完整路径名由下式确定
              在$ PATH中搜索目录并记住。以前记得的任何路径 - 
              名称被丢弃。如果提供了-p选项，则不执行路径搜索，并且
              filename用作命令的完整文件名。 -r选项导致
              贝壳忘了所有记住的位置。 -d选项导致shell忘记
              记住每个名字的位置。如果提供-t选项，则完整路径 - 
              打印每个名称对应的名称。如果有多个名称参数支持
              与-t一起使用，在散列的完整路径名之前打印名称。 -l选项
              导致输出以可重复用作输入的格式显示。如果没有争论 - 
              给出了，或者如果只提供-l，则有关记忆命令的信息是
              打印。除非找不到名称或无效选项，否则返回状态为true
              供应。

       帮助[-dms] [模式]
              显示有关内置命令的有用信息。如果指定了pattern，请帮助
              给出匹配模式的所有命令的详细帮助;否则所有的帮助
              打印内置和外壳控制结构。
              -d显示每个模式的简短描述
              -m以类似联机帮助页的格式显示每个模式的描述
              -s仅显示每个模式的简短用法概要

              除非没有命令匹配模式，否则返回状态为0。

       历史[n]
       历史-c
       历史-d offset
       历史记录-anrw [文件名]
       历史-p arg [arg ...]
       历史-s arg [arg ...]
              如果没有选项，则显示带有行号的命令历史列表。列出的行
              带*已被修改。 n的参数仅列出最后n行。如果
              shell变量HISTTIMEFORMAT已设置且不为null，它用作格式字符串
              strftime（3）显示与每个显示的历史条目关联的时间戳。
              在格式化的时间戳和历史记录之间不打印中间空白
              线。如果提供了filename，则将其用作历史文件的名称;如果不，
              使用HISTFILE的值。选项（如果提供）具有以下含义：
              -c通过删除所有条目来清除历史列表。
              -d offset
                     删除位置偏移处的历史记录条目。
              -a附加“新”历史记录行（从开头输入的历史记录行）
                     当前的bash会话）到历史文件。
